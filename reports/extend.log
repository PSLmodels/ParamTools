Traceback (most recent call last):
  File "/home/hdoupe/miniconda3/envs/paramtools-dev/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/hdoupe/miniconda3/envs/paramtools-dev/lib/python3.8/site-packages/nbclient/client.py", line 1082, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/hdoupe/miniconda3/envs/paramtools-dev/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/hdoupe/miniconda3/envs/paramtools-dev/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/home/hdoupe/miniconda3/envs/paramtools-dev/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/hdoupe/miniconda3/envs/paramtools-dev/lib/python3.8/site-packages/nbclient/client.py", line 535, in async_execute
    await self.async_execute_cell(
  File "/home/hdoupe/miniconda3/envs/paramtools-dev/lib/python3.8/site-packages/nbclient/client.py", line 827, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/hdoupe/miniconda3/envs/paramtools-dev/lib/python3.8/site-packages/nbclient/client.py", line 735, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
## Extend behavior by validator

ParamTools uses the validator associated with `label_to_extend` to determine how values should be extended by assuming that there is some order among the range of possible values for the label.

Note: You can view the grid of values for any label by inspecting the `label_grid` attribute of a `paramtools.Parameters` derived instance.

### Range

**Type:** `int`

```json
{
  "range": { "min": 0, "max": 5 }
}
```

_Extend values:_

```python
[0, 1, 2, 3, 4, 5]
```

**Type:** `float`

```json
{
  "range": { "min": 0, "max": 2, "step": 0.5 }
}
```

_Extend values:_

```python
[0, 0.5, 1.0, 1.5, 2.0]
```

**Type:** `date`

```json
{
  "range": { "min": "2019-01-01", "max": "2019-01-05", "step": { "days": 2 } }
}
```

_Extend values:_

```python
[datetime.date(2019, 1, 1),
 datetime.date(2019, 1, 3),
 datetime.date(2019, 1, 5)]
```

### Choice

**Type:** `int`

```json
{
  "choice": { "choices": [-1, -2, -3] }
}
```

_Extend values:_

```python
[-1, -2, -3]
```

**Type:** `str`

```json
{
  "choice": { "choices": ["january", "february", "march"] }
}
```

_Extend values:_

```python
["january", "february", "march"]
```

------------------

[0;36m  File [0;32m"<ipython-input-4-b0d7c82621af>"[0;36m, line [0;32m3[0m
[0;31m    ParamTools uses the validator associated with `label_to_extend` to determine how values should be extended by assuming that there is some order among the range of possible values for the label.[0m
[0m               ^[0m
[0;31mSyntaxError[0m[0;31m:[0m invalid syntax

SyntaxError: invalid syntax (<ipython-input-4-b0d7c82621af>, line 3)

